{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","setFoundMovie","addMovies","useState","setQuery","searching","setSearching","notFound","setNotFound","searchHandler","e","a","preventDefault","foundMovie","normalizeMovie","Title","Plot","Poster","imdbID","onSubmit","htmlFor","type","id","placeholder","value","onChange","event","target","classNames","disabled","onClick","App","setMovies","find","currentMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04f004b6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=14b422db';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  movie: Movie | null;\n  setFoundMovie: React.Dispatch<React.SetStateAction<Movie | null>>;\n  addMovies: () => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  movie,\n  setFoundMovie,\n  addMovies,\n}) => {\n  const [query, setQuery] = useState('');\n  const [searching, setSearching] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n\n  const searchHandler = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setSearching(true);\n\n    try {\n      const foundMovie = await getMovie(query);\n      let normalizeMovie = null;\n\n      if ('Error' in foundMovie) {\n        if (foundMovie.Error === 'Movie not found!') {\n          setNotFound(true);\n        }\n      } else {\n        normalizeMovie = {\n          title: foundMovie.Title,\n          description: foundMovie.Plot,\n          imgUrl: foundMovie.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : foundMovie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${foundMovie.imdbID}`,\n          imdbId: foundMovie.imdbID,\n        };\n      }\n\n      setFoundMovie(normalizeMovie);\n    } finally {\n      setSearching(false);\n    }\n  };\n\n  const onChangeHandler = (value: string) => {\n    setQuery(value);\n\n    if (notFound) {\n      setNotFound(false);\n    }\n  };\n\n  const handlerAddMovie = () => {\n    setQuery('');\n    addMovies();\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={searchHandler}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => onChangeHandler(event.target.value)}\n            />\n          </div>\n\n          {notFound && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': searching },\n              )}\n              disabled={!query}\n\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handlerAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n\n  const addMovies = () => {\n    if (foundMovie) {\n      const movieInList = movies\n        .find(currentMovie => currentMovie.imdbId === foundMovie.imdbId);\n\n      if (!movieInList) {\n        setMovies([...movies, foundMovie]);\n      }\n    }\n\n    setFoundMovie(null);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movie={foundMovie}\n          setFoundMovie={setFoundMovie}\n          addMovies={addMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}